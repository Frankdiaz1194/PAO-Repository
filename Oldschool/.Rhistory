} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (NA)"))
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (NA)"))
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (NA)"))
} else {ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"th), National (NA)"))}
} else if (length(gl_ranking$rank[gl_ranking$WaterwayName == harbor]) == 0) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 1) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 2) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 3) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))
}
} else {ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"th), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))}
# UPDATED IN JAN 2024: FOLLOW NEW SIG FIG AND ROUNDING CONVENTION
# All values in millions with 2 sig figs. Any values < 10,000 tons = "< 0.01 Million"
if (avg_tonnage_5_yr[[1]] > 0) {
if (avg_tonnage_5_yr[[1]]/10000 > 1) {
avg_tonnage_5_yr[[1]] <- paste0(signif(avg_tonnage_5_yr[[1]]/1000000,2), " Million")
} else {
avg_tonnage_5_yr[[1]] <- "<0.01 Million"
}
}
if (recent_tons[[2]] > 0) {
if (recent_tons[[2]]/10000 > 1) {
recent_tons[[2]] <- paste0(signif(recent_tons[[2]]/1000000,2), " Million")
} else {
recent_tons[[2]] <- "<0.01 Million"
}
}
if (shipping[[1]] > 0) {
if (shipping[[1]]/10000 > 1) {
shipping[[1]] <- paste0(signif(shipping[[1]]/1000000,2), " Million")
} else {
shipping[[1]] <- "<0.01 Million"
}
}
if (receiving[[1]] > 0) {
if (receiving[[1]]/10000 > 1) {
receiving[[1]] <- paste0(signif(receiving[[1]]/1000000,2), " Million")
} else {
receiving[[1]] <- "<0.01 Million"
}
}
if (intraport[[1]] > 0) {
if (intraport[[1]]/10000 > 1) {
intraport[[1]] <- paste0(signif(intraport[[1]]/1000000,2), " Million")
} else {
intraport[[1]] <- "<0.01 Million"
}
}
if (thru[[1]] > 0) {
if (thru[[1]]/10000 > 1) {
thru[[1]] <- paste0(signif(thru[[1]]/1000000,2), " Million")
} else {
thru[[1]] <- "<0.01 Million"
}
}
# UPDATED IN JAN 2024: Order of tonnage table --> fast facts table
# NOTE: do NOT change order of tonnage table if you can help it. You would also need to make tedious changes to talking points code.
table <- data.frame(" ",
ranking[[1]],
recent_tons[[2]],
" ",
avg_tonnage_5_yr[[1]],
shipping[[1]],
receiving[[1]],
thru[[1]],
intraport[[1]],
top_commods[[1]],
top_shipping[[1]],
top_recv[[1]]
)
colnames(table) <- c("2021 Highlights",
"Harbor Ranking",
paste0(calendar_year, " Tonnage"),
"5-Year Averages",
paste0(calendar_year-4,"-",calendar_year," Average Tonnage"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Shipments"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Receipts"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Thru"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Intraport"),
"Top Three Commodities Handled",
"Primary Commodity Shipped",
"Primary Commodity Received"
)
table <- data.frame(t(table))
colnames(table) <- c(paste0("Fast Facts - ", harbor))
return(table)
}
# Load Fast Facts table into workbook / run fast facts function
# Talking Points: writing and pasting sentences together
wb <- loadWorkbook("Inputs/GL Talking Points Template.xlsx")
for (each in 1:length(harbors$Harbor)) {
tonnage_table <- fast_facts(harbors$Harbor[each])
if (each == 1) {
writeData(wb, sheet = "Tonnage_Tables", tonnage_table, startCol = 1, startRow = 1, rowNames = TRUE)
} else {
writeData(wb, sheet = "Tonnage_Tables", tonnage_table, startCol = 1, startRow = ((each-1)*13)+1, rowNames = TRUE)
}
short_harbor <- str_remove(harbors$Harbor[each], ", [:print:]+")
if (length(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) == 0) {
if (length(gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]]) == 0) {
ranking <- ""
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]] %% 10 == 1) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName==harbors$Harbor[each]],"st largest commercial harbor on the Great Lakes.")
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]] %% 10 == 2) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName==harbors$Harbor[each]],"nd largest commercial harbor on the Great Lakes.")
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]] %% 10 == 3) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName==harbors$Harbor[each]],"rd largest commercial harbor on the Great Lakes.")
} else {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName==harbors$Harbor[each]],"th largest commercial harbor on the Great Lakes.")
}
} else if (length(gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]]) == 0) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 1) {
ranking <- paste0(short_harbor, " is the ", national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "st largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 2) {
ranking <- paste0(short_harbor, " is the ", national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "nd largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 3) {
ranking <- paste0(short_harbor, " is the ", national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "rd largest harbor in the nation.")
} else {
ranking <- paste0(short_harbor, " is the ", national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "th largest harbor in the nation.")
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]] %% 10 == 1) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 1) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "st largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "st largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 2) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "st largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "nd largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 3) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "st largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "rd largest harbor in the nation.")
} else {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "st largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "th largest harbor in the nation.")
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]] %% 10 == 2) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 1) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "nd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "st largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 2) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "nd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "nd largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 3) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "nd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "rd largest harbor in the nation.")
} else {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "nd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "th largest harbor in the nation.")
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]] %% 10 == 3) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 1) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "rd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "st largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 2) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "rd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "nd largest harbor in the nation.")
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]]) %% 10 == 3) {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "rd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "rd largest harbor in the nation.")
} else {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName == harbors$Harbor[each]], "rd largest commercial harbor on the Great Lakes and the ",
national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]], "th largest harbor in the nation.")
}
} else {
ranking <- paste0(short_harbor, " is the ", gl_ranking$rank[gl_ranking$WaterwayName==harbors$Harbor[each]],
"th largest commercial harbor on the Great Lakes and the ", national_rankings$RANK[national_rankings$PORT_NAME == harbors$Harbor[each]],
"th largest harbor in the nation.")
}
# Pasting text together
if (is.na(tonnage_table[11,1])) {
if (is.na(tonnage_table[12,1])) {
talking_points <- paste0(harbors$Harbor[each], " had ", tonnage_table[3,1], " tons move through the harbor in ", calendar_year,
", and averaged ",tonnage_table[5,1], " tons over the past 5 years from ", calendar_year-4, "-", calendar_year, ". ",
ranking,
" On average, between ",calendar_year-4, "-", calendar_year, ", the harbor shipped ", tonnage_table[6,1], " tons and received ", tonnage_table[7,1],
" tons annually.")
} else {
talking_points <- paste0(harbors$Harbor[each], " had ", tonnage_table[3,1], " tons move through the harbor in ", calendar_year,
", and averaged ", tonnage_table[5,1], " tons over the past 5 years from ", calendar_year-4, "-", calendar_year, ". ",
ranking,
" On average, between ",calendar_year-4, "-", calendar_year, ", the harbor shipped ", tonnage_table[6,1], " tons and received ", tonnage_table[7,1],
" tons annually. The top commodities handled at ", short_harbor, " are ", tonnage_table[7,1],
". The largest commodity received is ", tonnage_table[12,1], ".")
}
} else if (is.na(tonnage_table[12,1])) {
talking_points <- paste0(harbors$Harbor[each], " had ", tonnage_table[3,1], " tons move through the harbor in ", calendar_year,
", and averaged ",tonnage_table[5,1], " tons over the past 5 years from ", calendar_year-4, "-", calendar_year, ". ",
ranking,
" On average, between ",calendar_year-4, "-", calendar_year, ", the harbor shipped ", tonnage_table[6,1], " tons and received ", tonnage_table[7,1],
" tons annually. The top commodities handled at ", short_harbor, " are ", tonnage_table[7,1],
". The largest commodity shipped is ", tonnage_table[11,1], ".")
} else {
talking_points <- paste0(harbors$Harbor[each], " had ", tonnage_table[3,1], " tons move through the harbor in ", calendar_year,
", and averaged ",tonnage_table[5,1], " tons over the past 5 years from ", calendar_year-4, "-", calendar_year, ". ",
ranking,
" On average, between ",calendar_year-4, "-", calendar_year, ", the harbor shipped ", tonnage_table[6,1], " tons and received ", tonnage_table[7,1],
" tons annually. The top commodities handled at ", short_harbor, " are ", tonnage_table[7,1],
". The largest commodity shipped is ", tonnage_table[11,1], " and the largest commodity received is ", tonnage_table[12,1], ".")
}
writeData(wb, sheet = "Harbors", harbors$Harbor[each], startCol = 1, startRow = each+1)
writeData(wb, sheet = "Harbors", talking_points, startCol = 2, startRow = each+1)
}
# GL NAV DOMESTIC INTERCONNECTIVITY MAPS
# FAST FACTS AND TALKING POINTS
# Last Updated: FEB 23, 2024
# CONTENTS:
# INPUT FILES NEEDED
# RECENT UPDATES TO CODE
# VARIABLES TO UPDATE MANUALLY AND ANNUALLY
# MAIN CODE
# ---
# INPUT FILES NEEDED ####
# IN SOURCE FILE LOCATION/ FOLDER
# ... GL Talking Points template spreadsheet
# ... national rankings spreadsheet from WCSC: save as WCSC_tonnagebystate_CY##.xlsx
# ... national cargo and trips spreadsheet (All Regions) from IWR/WCSC: save as Cargo_20##-20## All Regions 10yrs.xlsx
# IMPORTANT: you must save these files using very specific file names, to feed them through this R code
# WHERE TO GET NATIONAL RANKINGS
# . The national rankings spreadsheet is generated by WCSC every year, and is accessible through:
# ... WCSC Website > Commerce Data > Ports and States Data (Available in Excel format here) >
# ... select relevant calendar year
# ... Object title: Waterborne Commerce Statistics Center: CY 20## waterborne tonnage by state
# ... Download xlsx file, SAVE WITH THIS NAMING CONVENTION -- WCSC_tonnagebystate_CY##.xlsx
# ... Several tabs, e.g., Port_by_Tons
# ... Columns: RANK, PORT_NAME
# WHERE TO GET CARGO AND TRIPS DATA
# . This is a very large file with several 100,000s of rows of data.
# ... WCSC Website > Commerce Data > Waterborne Cargo and Trips Data Files >
# ... Select link with naming convention: Cargo_20##-20## All Regions 10yrs
# ... download xlsx file and use same naming convention
# ... Columns: Waterway, WaterwayName, TrafficCode, TrafficName, Commodity, etc.
# ---
# RECENT UPDATES TO CODE ####
# FY23
# ... FY22 talking points and fast facts highlighted shipment/receipt/thru/intraport data for ONE CY YEAR ONLY.
# ... FY23 talking points and fast facts highlight shipment/receipt/thru/intraport data for 5 YEAR AVERAGE.
# ... minor changes: FY23 file naming convention and set working directory
# ---
# UPDATE MANUALLY ####
# Set working directory every time you run file
# Set the project directory
setwd("C:/Users/h5pmldfb/OneDrive - US Army Corps of Engineers/PAO Project/Oldschool")
# Manually update FY every year
FY <- 2023
# SEARCH FOR "UPDATE IN FY2024"
# ---
# MAIN BODY OF CODE ####
calendar_year <- FY-2
FY_short <- FY-2000
calendar_short <- calendar_year-2000
library(readxl)
library(openxlsx)
library(tidyr)
library(dplyr)
library(stringr)
# Read file: tonnage and direction data for all ports nationally
data <- read_xlsx(paste0("Cargo",calendar_year-9,"-",calendar_year," All Regions.xlsx"))
harbors <- read_xlsx("GL_Talking_Points_CY21.xlsx", sheet = "Harbors") %>%
dplyr::filter(Harbor != "Indiana (Northern District), IN" & Harbor != "Buffington, IN")
harbors$Harbor[harbors$Harbor=="Detour, MI"] <- "DeTour, MI"
# Read file: national rankings for top 150 ports
# TROUBLESHOOT: check spelling of sheet/ tab within file
national_rankings <- read_xlsx("WCSC_tonnagebystate_CY21.xlsx", sheet = "Port_by_Name")
national_rankings <- national_rankings[4:length(national_rankings$...1),]
colnames(national_rankings) <- national_rankings[1,]
national_rankings <- national_rankings[-1,]
# Filter tonnage and direction data for GL data. Look only at most recent 5 years (i.e., calendar_year-5)
gl_data <- data %>% dplyr::filter((CompletedYear > calendar_year-5 & CompletedYear <= calendar_year) & (WaterwayCode < 4000 & WaterwayCode > 3000))
gl_ranking <- gl_data %>% dplyr::filter(CompletedYear == calendar_year & WaterwayCode != 3001 & WaterwayCode != 3101 & WaterwayCode != 3191 &
WaterwayCode != 3201 & WaterwayCode != 3301 & WaterwayCode != 3401 & WaterwayCode != 3501 &
WaterwayCode != 3601 & WaterwayCode != 3701 & WaterwayCode != 3810 & WaterwayCode != 3811 &
WaterwayCode != 3850 & WaterwayCode != 3901 & WaterwayCode != 3999 & WaterwayCode != 3230 &
WaterwayCode != 3321 & WaterwayCode != 3743 & WaterwayCode != 3749 & WaterwayCode != 3802) %>% group_by(WaterwayName) %>%
summarize(tons = sum(ShortTons)) %>% arrange(desc(tons)) %>% mutate(rank = round(rank(-tons),0))
# Create table of fast facts for domestic interconnectivity maps
fast_facts <- function(harbor) {
total_tons <- gl_data %>% dplyr::filter(WaterwayName == harbor) %>% group_by(CompletedYear) %>% summarize(tons = sum(ShortTons))
# Recent tons = tons from target CY
# Avg tonnage = 5-year average in all directions for harbor
if (length(total_tons[[2]]) == 0) {
avg_tonnage_5_yr <- data.frame(0)
recent_tons <- data.frame(0,0)
} else {
avg_tonnage_5_yr <- total_tons %>% summarize(avg_tons = round(mean(tons),0))
recent_tons <- total_tons %>% dplyr::filter(CompletedYear == calendar_year)
}
if (length(recent_tons[[2]]) == 0) {recent_tons <- data.frame(0,0)}
# Shipping/ Receiving/ Thru/ Intraport = 5-year averages
shipping <- gl_data %>% dplyr::filter(WaterwayName == harbor & `In/Out/Thru` == "Outbound Shipping") %>%
summarize(shipping_tons = sum(ShortTons)/5)
if (length(shipping[[1]]) == 0) {shipping <- data.frame(0,0)}
receiving <- gl_data %>% dplyr::filter(WaterwayName == harbor & `In/Out/Thru` == "Inbound Receiving") %>%
summarize(shipping_tons = sum(ShortTons)/5)
if (length(receiving[[1]]) == 0) {receiving <- data.frame(0,0)}
thru <- gl_data %>% dplyr::filter(WaterwayName == harbor & `In/Out/Thru` == "Thru") %>%
summarize(shipping_tons = sum(ShortTons)/5)
if (length(thru[[1]]) == 0) {thru <- data.frame(0,0)}
intraport <- gl_data %>% dplyr::filter(WaterwayName == harbor & `In/Out/Thru` == "Local") %>%
summarize(shipping_tons = sum(ShortTons)/5)
if (length(intraport[[1]]) == 0) {intraport <- data.frame(0,0)}
# Commodities
# POTENTIAL UPDATE: ADD IF STATEMENT FOR COMMODITIES WITH LESS THAN < 1% / >99% ####
total_commodities <- gl_data %>% dplyr::filter(WaterwayName == harbor) %>% group_by(CommodityName) %>%
summarize(tons = sum(ShortTons)/5) %>% mutate(percent = round((tons/avg_tonnage_5_yr[[1]]*100),0))
top_3_commod <- top_n(total_commodities,3, tons)
if (length(top_3_commod$CommodityName)<1) {top_commods <- data.frame(NA)
} else if (length(top_3_commod$CommodityName)==1) {
top_commods <- data.frame(paste0(top_3_commod[[1,1]], " (", top_3_commod[[1,3]],"%)"))
} else if (length(top_3_commod$CommodityName)==2) {
top_commods <- data.frame(paste0(top_3_commod[[1,1]]," (",top_3_commod[[1,3]],"%), ",top_3_commod[[2,1]]," (",top_3_commod[[2,3]],"%)"))
} else {
top_commods <- data.frame(paste0(top_3_commod[[1,1]]," (",top_3_commod[[1,3]],"%), ",top_3_commod[[2,1]],
" (",top_3_commod[[2,3]],"%), ",top_3_commod[[3,1]]," (",top_3_commod[[3,3]],"%)"))
}
ship_comm <- gl_data %>% dplyr::filter(WaterwayName == harbor & `In/Out/Thru` == "Outbound Shipping") %>%
group_by(CommodityName) %>% summarize(tons = sum(ShortTons)/5) %>% mutate(percent = round((tons/shipping[[1]]*100),0))
if (length(ship_comm[[2]]) ==0) {top_shipping <- "NA"
} else {top_shipping <- data.frame(paste0(top_n(ship_comm,1)[[1,1]], "(", top_n(ship_comm,1)[[1,3]], "%)"))}
recv_comm <- gl_data %>% dplyr::filter(WaterwayName == harbor & `In/Out/Thru` == "Inbound Receiving") %>%
group_by(CommodityName) %>% summarize(tons = sum(ShortTons)/5) %>% mutate(percent = round((tons/receiving[[1]]*100),0))
if (length(recv_comm[[2]]) == 0) {top_recv <- "NA"
} else {top_recv <- data.frame(paste0(top_n(recv_comm,1)[[1,1]], "(", top_n(recv_comm,1)[[1,3]], "%)"))}
# Formats rankings for fast facts table
if (length(as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor])) == 0) {
if (length(gl_ranking$rank[gl_ranking$WaterwayName == harbor]) == 0) {
ranking <- data.frame("Great Lakes (NA), National (NA)")
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (NA)"))
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (NA)"))
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (NA)"))
} else {ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"th), National (NA)"))}
} else if (length(gl_ranking$rank[gl_ranking$WaterwayName == harbor]) == 0) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {ranking <- data.frame(paste0("Great Lakes (NA), National (", as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 1) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"st), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 2) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"nd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))
}
} else if (gl_ranking$rank[gl_ranking$WaterwayName == harbor] %% 10 == 3) {
if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 1) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "st)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 2) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "nd)"))
} else if (as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]) %% 10 == 3) {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "rd)"))
} else {
ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"rd), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))
}
} else {ranking <- data.frame(paste0("Great Lakes (", gl_ranking$rank[gl_ranking$WaterwayName==harbor],"th), National (",
as.integer(national_rankings$RANK[national_rankings$PORT_NAME == harbor]), "th)"))}
# UPDATED IN JAN 2024: FOLLOW NEW SIG FIG AND ROUNDING CONVENTION
# All values in millions with 2 sig figs. Any values < 10,000 tons = "< 0.01 Million"
if (avg_tonnage_5_yr[[1]] > 0) {
if (avg_tonnage_5_yr[[1]]/10000 > 1) {
avg_tonnage_5_yr[[1]] <- paste0(signif(avg_tonnage_5_yr[[1]]/1000000,2), " Million")
} else {
avg_tonnage_5_yr[[1]] <- "<0.01 Million"
}
}
if (recent_tons[[2]] > 0) {
if (recent_tons[[2]]/10000 > 1) {
recent_tons[[2]] <- paste0(signif(recent_tons[[2]]/1000000,2), " Million")
} else {
recent_tons[[2]] <- "<0.01 Million"
}
}
if (shipping[[1]] > 0) {
if (shipping[[1]]/10000 > 1) {
shipping[[1]] <- paste0(signif(shipping[[1]]/1000000,2), " Million")
} else {
shipping[[1]] <- "<0.01 Million"
}
}
if (receiving[[1]] > 0) {
if (receiving[[1]]/10000 > 1) {
receiving[[1]] <- paste0(signif(receiving[[1]]/1000000,2), " Million")
} else {
receiving[[1]] <- "<0.01 Million"
}
}
if (intraport[[1]] > 0) {
if (intraport[[1]]/10000 > 1) {
intraport[[1]] <- paste0(signif(intraport[[1]]/1000000,2), " Million")
} else {
intraport[[1]] <- "<0.01 Million"
}
}
if (thru[[1]] > 0) {
if (thru[[1]]/10000 > 1) {
thru[[1]] <- paste0(signif(thru[[1]]/1000000,2), " Million")
} else {
thru[[1]] <- "<0.01 Million"
}
}
# UPDATED IN JAN 2024: Order of tonnage table --> fast facts table
# NOTE: do NOT change order of tonnage table if you can help it. You would also need to make tedious changes to talking points code.
table <- data.frame(" ",
ranking[[1]],
recent_tons[[2]],
" ",
avg_tonnage_5_yr[[1]],
shipping[[1]],
receiving[[1]],
thru[[1]],
intraport[[1]],
top_commods[[1]],
top_shipping[[1]],
top_recv[[1]]
)
colnames(table) <- c("2021 Highlights",
"Harbor Ranking",
paste0(calendar_year, " Tonnage"),
"5-Year Averages",
paste0(calendar_year-4,"-",calendar_year," Average Tonnage"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Shipments"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Receipts"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Thru"),
paste0(calendar_year-4, "-", calendar_year, " Avg. Intraport"),
"Top Three Commodities Handled",
"Primary Commodity Shipped",
"Primary Commodity Received"
)
table <- data.frame(t(table))
colnames(table) <- c(paste0("Fast Facts - ", harbor))
return(table)
}
# Load Fast Facts table into workbook / run fast facts function
# Talking Points: writing and pasting sentences together
wb <- loadWorkbook("GL Talking Points Template.xlsx")
fast_facts("Buffalo, NY")
